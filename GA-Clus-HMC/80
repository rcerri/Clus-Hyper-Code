# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = ./ec/simple/simple.params

pop.subpop.0.size = 100
generations = 100

pop.subpop.0.species		= ec.vector.IntegerVectorSpecies
pop.subpop.0.species.ind	= ec.vector.IntegerVectorIndividual
pop.subpop.0.species.fitness = ec.simple.SimpleFitness
pop.subpop.0.species.genome-size	= 14

# Note that min-gene and max-gene are defined in the SPECIES, not in the INDIVIDUAL
pop.subpop.0.species.min-gene	= 0
pop.subpop.0.species.max-gene 	= 100

# split type
pop.subpop.0.species.min-gene.0 = 0
pop.subpop.0.species.max-gene.0 = 2

# oblique strategy - to do

# split measure 
pop.subpop.0.species.min-gene.2 = 0
pop.subpop.0.species.max-gene.2 = 14

# binary nominal split
pop.subpop.0.species.min-gene.3 = 0
pop.subpop.0.species.max-gene.3 = 1

# stopping criteria
pop.subpop.0.species.min-gene.4 = 0
pop.subpop.0.species.max-gene.4 = 4

# missing value split
pop.subpop.0.species.min-gene.6 = 0
pop.subpop.0.species.max-gene.6 = 3

# missing value distribution
pop.subpop.0.species.min-gene.7 = 0
pop.subpop.0.species.max-gene.7 = 6

# collapse
pop.subpop.0.species.min-gene.8 = 0
pop.subpop.0.species.max-gene.8 = 1

# laplace correction
pop.subpop.0.species.min-gene.9 = 0
pop.subpop.0.species.max-gene.9 = 1

# missing value classification
pop.subpop.0.species.min-gene.10 = 0
pop.subpop.0.species.max-gene.10 = 2

# pruning strategy
pop.subpop.0.species.min-gene.11 = 0
pop.subpop.0.species.max-gene.11 = 5

# pruning parameter 2 - num folds for validation pruning
pop.subpop.0.species.min-gene.13 = 2
pop.subpop.0.species.max-gene.13 = 10


#pop.subpop.0.species.pipe = ec.vector.breed.VectorMutationPipeline
#pop.subpop.0.species.pipe.source.0 = ec.vector.breed.VectorCrossoverPipeline
#pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
#pop.subpop.0.species.pipe.source.0.source.1 = same


pop.subpop.0.species.pipe = ec.breed.MultiBreedingPipeline
pop.subpop.0.species.pipe.num-sources = 3pop.subpop.0.species.pipe.source.0 = ec.breed.ReproductionPipelinepop.subpop.0.species.pipe.source.0.prob = 0.05pop.subpop.0.species.pipe.source.1 = ec.vector.breed.VectorCrossoverPipelinepop.subpop.0.species.pipe.source.1.prob = 0.80
pop.subpop.0.species.pipe.source.2 = ec.vector.breed.VectorMutationPipelinepop.subpop.0.species.pipe.source.2.prob = 0.15

pop.subpop.0.species.pipe.source.0.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.1.source.0 = ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.1.source.1 = same
pop.subpop.0.species.pipe.source.2.source.0 = ec.select.TournamentSelection


pop.subpop.0.species.crossover-type = any
pop.subpop.0.species.crossover-prob = 0.5
pop.subpop.0.species.mutation-prob = 0.5
pop.subpop.0.species.mutation-type = reset

select.tournament.size = 2
breed.elite.0 = 5


eval.problem = headDt.GenerateTrees

breedthreads = auto
evalthreads = auto

seed.0 = time
seed.1 = time

stat.child.0.gather-full = true
stat.num-children = 1
stat.child.0 = ec.simple.SimpleShortStatistics
stat.child.0.gather-full = true
#stat.child.0.file = $out2.stat